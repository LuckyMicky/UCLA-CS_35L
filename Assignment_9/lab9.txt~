Daxuan Shu
CS_35L
lab9.txt

1. Get a copy of the Diffutils repository

$ git clone ~eggert/src/gnu/diffutils

2. Get a log of changes

$ cd diffutils/
$ git log > git-log.txt

3. Generate a list of tags

git tag > git-tags.txt

4. Find the commit and generate a patch

Find out the hash:
$ emacs git-log.txt

Then I used C-s to search for the key word "maint: quote 'like this'..."

I got the commit number right above the search destination

commit 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f

Then gnereate the patch and put it into quote_patch.txt

$ git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f \
 > --stdout > quote-patch.txt

5. Check out version 3.0

$ git checkout -b 'my3.0' 'v3.0'

Output:

Switched to a new branch 'my3.0'

6. Patch

Problems encountered:

a. No such file exists:
HACKING
doc/diffutils.texi
man/help2man

b. Conflicts:
README: at 9, 60
README-hacking: at 19
cfg.mk: at 29
src/diff.c: at 876, 906, 942
src/diff3.c: at 433

7. Overview

Output:

On branch my3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   NEWS
	modified:   README
	modified:   TODO
	modified:   doc/diagmeet.note
	modified:   ms/config.bat
	modified:   ms/config.site
	modified:   po/en.po
	modified:   src/analyze.c
	modified:   src/cmp.c
	modified:   src/context.c
	modified:   src/diff.c
	modified:   src/diff.h
	modified:   src/diff3.c
	modified:   src/dir.c
	modified:   src/ifdef.c
	modified:   src/io.c
	modified:   src/sdiff.c
	modified:   src/side.c
	modified:   src/system.h
	modified:   src/util.c
	modified:   tests/help-version

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	NEWS.orig
	README-hacking.orig
	README-hacking.rej
	README.orig
	README.rej
	cfg.mk.orig
	cfg.mk.rej
	git-log.txt
	git-tags.txt
	ms/config.site.orig
	quote-patch.txt
	src/cmp.c.orig
	src/context.c.orig
	src/diff.c.orig
	src/diff.c.rej
	src/diff.h.orig
	src/diff3.c.orig
	src/diff3.c.rej
	src/dir.c.orig
	src/sdiff.c.orig
	src/system.h.orig
	src/util.c.orig
	tests/help-version.orig

no changes added to commit (use "git add" and/or "git commit -a")

8. Learn to use Emacs functions

I learned that I can use vc-revert to revert changes.

9. Reverting changes

I used emacs to open NEWS, README, TODO, doc/diagmeet.note, ms/config.bat,
ms/config.site, po/en.po, src/diff.h, src/system.h, tests/help-version

I used vc-revert (C-x v u) to discard changes to those files.

For .c files, I discarded changes to comments.
$ cd src
Then
I used vc-diff (C-x v =) function to check changes.

I used M-g g to go to the line numbers specified in vc-diff.
I used M-% to replace the first ' with `

ine number specified in vc-diff for discarded changes:
analyze.c: all
cmp.c: 36, 364, 377
context.c: all changes, I used vc-revert.
diff.c: 40, 57 (3 lines there), 92
diff3.c: 35, 159, 1475
dir.c: 87, 125, 234
ifdef.c: all
io.c: all
sdiff.c: 35, 92, 747
side.c: all
util.c: 27, 121, 146, 190, 241, 270, 650

10. Manually Apply Changes of rejected patches

Reason: The merge failed because line numbers and strings didn't match.
diff.c: I manually searched those sentences and manually changed ` to '
diff3.c: same as above

11. Remove untracked files

I used
find . -type f -name '*.orig' -delete
and
find . -type f -name '*.rej' -delete

to delete unwanted files

12. Patch for v3.0

git status gives us:

modified:   cmp.c
	modified:   diff.c
	modified:   diff3.c
	modified:   dir.c
	modified:   sdiff.c
	modified:   util.c

It's half a dozen of files

Patch:
$ git diff > quote-3.0-patch.txt

13. Build the resulting modified version

